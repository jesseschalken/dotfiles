#!/usr/bin/env php
<?php

$errors = array(
    PREG_INTERNAL_ERROR        => 'there was an internal PCRE error',
    PREG_BACKTRACK_LIMIT_ERROR => 'pcre.backtrack_limit excausted',
    PREG_RECURSION_LIMIT_ERROR => 'pcre.recursion_limit excausted',
    PREG_BAD_UTF8_ERROR        => 'malformed UTF-8 data',
    PREG_BAD_UTF8_OFFSET_ERROR => 'offset didn\'t correspond to the beginning of a valid UTF-8 code point',
);

$clear = "\r\x1B[2K";

ini_set('pcre.backtrack_limit', "90000000");
ini_set('pcre.recursion_limit', "90000000");

$regex   = readline("regex:\n");
$replace = readline("replacement:\n");

// Insert a "\" before each "#" preceded by an even number of "\"s
$regex = "#" . preg_replace('#(?<!\\\\)((\\\\\\\\)*)(\#)#S', '$1\\\\$3', $regex) . "#sS";
$files = array_slice($argv, 1);
$count = count($files);

$num = 0;
foreach ($files as $i => $file) {
    print "$clear$i/$count: $file";
    $contents = file_get_contents($file);
    $contents = preg_replace($regex, $replace, $contents, -1, $num_);
    $num += $num_;

    $error = preg_last_error();
    if ($error !== PREG_NO_ERROR)
        print "$clear$file: {$errors[$error]}\n";
    else
        file_put_contents($file, $contents);
}

print "$clear$num replacements accross $count files\n";

