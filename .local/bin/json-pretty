#!/usr/bin/php
<?php

function check_error() {
    static $errors = [
        JSON_ERROR_NONE                 => 'No error has occurred',
        JSON_ERROR_DEPTH                => 'The maximum stack depth has been exceeded',
        JSON_ERROR_STATE_MISMATCH       => 'Invalid or malformed JSON',
        JSON_ERROR_CTRL_CHAR            => 'Control character error, possibly incorrectly encoded',
        JSON_ERROR_SYNTAX               => 'Syntax error',
        JSON_ERROR_UTF8                 => 'Malformed UTF-8 characters, possibly incorrectly encoded',
        JSON_ERROR_RECURSION            => 'One or more recursive references in the value to be encoded',
        JSON_ERROR_INF_OR_NAN           => 'One or more NAN or INF values in the value to be encoded',
        JSON_ERROR_UNSUPPORTED_TYPE     =>  'A value of a type that cannot be encoded was given',
    ];
    $error = json_last_error();
    if ($error != JSON_ERROR_NONE) {
        fwrite(STDERR, $errors[$error] . "\n");
        exit(1);
    }
}

$json = file_get_contents('php://stdin');
$json = json_decode($json);
check_error();
$json = json_encode($json, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE | JSON_PRESERVE_ZERO_FRACTION);
check_error();
print $json;

